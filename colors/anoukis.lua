local colorbuddy = require("colorbuddy")

colorbuddy.colorscheme("anoukis")
local Color = colorbuddy.Color
local Group = colorbuddy.Group
local c = colorbuddy.colors
local g = colorbuddy.groups
local s = colorbuddy.styles

Color.new("white", "#f2e5bc")
Color.new("red", "#cc6666")
Color.new("pink", "#fef601")
Color.new("green", "#99cc99")
Color.new("yellow", "#f8fe7a")
Color.new("blue", "#81a2be")
Color.new("aqua", "#8ec07c")
Color.new("cyan", "#8abeb7")
Color.new("purple", "#8e6fbd")
Color.new("violet", "#b294bb")
Color.new("orange", "#de935f")
Color.new("brown", "#a3685a")

Color.new("seagreen", "#698b69")
Color.new("turquoise", "#698b69")

-- syntax
Color.new("bgFloat", "#FBF9FF")
Color.new("fg", "#4A4453")
Color.new("cursor", "#A17EE6")
Color.new("cursorLine", "#F7F3FF")
Color.new("keyword", "#A1A8BD")
Color.new("comment", "#D8D1E5")
Color.new("punctuation", "#4A4453")
Color.new("method", "#8D8696")
Color.new("type", "#5D5765")
Color.new("string", "#4A4453")
Color.new("number", "#4A4453")
Color.new("constant", "#282430")
Color.new("tag", "#312C39")
Color.new("attribute", "#C8C1D1")
Color.new("property", "#C8C1D1")
Color.new("parameter", "#C8C1D1")
Color.new("label", "#312C39")

-- workspace
Color.new("primary", "#0099e1")
Color.new("selection", "#ADF6FF")
Color.new("search", "#B3A5C8")
Color.new("diffAdd", "#009B42")
Color.new("diffChange", "#008BDA")
Color.new("diffDelete", "#E05859")
Color.new("added", "#3cbc66")
Color.new("changed", "#0099e1")
Color.new("deleted", "#FA7883")
Color.new("diffText", "#C2E4FF")
Color.new("error", "#ff0000")
Color.new("errorBG", "#FCE4E4")
Color.new("warning", "#ff8f3a")
Color.new("warningBG", "#FBE4D5")
Color.new("info", "#0099e1")
Color.new("infoBG", "#D2ECFF")
Color.new("hint", "#7982DA")
Color.new("hintBG", "#E6E9FF")
Color.new("mergeCurrent", "#F1E8E6")
Color.new("mergeCurrentLabel", "#E5D4D0")
Color.new("mergeIncoming", "#DFEDF6")
Color.new("mergeIncomingLabel", "#CAE3F4")
Color.new("mergeParent", "#E9A2A2")
Color.new("mergeParentLabel", "#E9A2A2")

-- colors
Color.new("white", "#ffffff")
Color.new("black", "#000000")
Color.new("lightGray", "#d3d3d3")
Color.new("gray", "#676a77")
Color.new("darkGray", "#373a41")
Color.new("BrightMagenta", "#ce32c0")

local background_string = "#FBF9FF"
Color.new("background", background_string)
Color.new("softPurple", background_string)

Group.new("Normal", c.keyword, c.softPurple)
Group.new("NormalNC", c.fg, c.bgFloat)
Group.new("InvNormal", c.softPurple, c.error)
Group.new("NormalFloat", c.fg, c.bgFloat)
Group.new("FloatBorder", c.fg, c.bgFloat)

Group.new("CursorLine", nil, c.CursorLine)
Group.new("Whitespace", c.superwhite)
Group.new("Comment", c.comment, nil, s.italic)
Group.new("LineNr", c.comment)
Group.new("CursorLineNr", c.comment)
Group.new("Search", c.softPurple, c.search)
Group.new("IncSearch", c.softPurple, c.Cursor:light())
Group.new("CurSearch", c.softPurple, c.search)

Group.new("NormalSB", nil, c.bgFloat)
Group.new("ColorColumn", nil, c.cursor:light():light())
Group.new("Conceal", nil)
Group.new("Cursor", c.softPurple, c.cursor)
Group.new("lCursor", g.Cursor)
Group.new("CursorIM", g.Cursor)
Group.new("Directory", c.punctuation)
-- Group.new("EndOfBuffer", nil, c.punctuation)
Group.new("TermCursor", c.white, c.black)
Group.new("TermCursorNC", nil)
Group.new("ErrorMsg", nil, c.error)

Group.new("VertSplit", nil, nil)
Group.new("Winseparator", nil, nil)

Group.new("Folded", c.tag, c.punctuation)
Group.new("SignColumn", g.Normal)
Group.new("FoldColumn", g.SignColumn)
Group.new("Substitute", g.IncSearch)
Group.new("MatchParen", c.bg, c.BrightMagenta)
Group.new("ModeMsg", g.Normal)
Group.new("MsgArea", g.Normal)
-- Group.new("MsgSeparator", nil)
Group.new("MoreMsg", c.primary)
Group.new("NonText", c.white)
Group.new("NormalNC", g.Normal)

-- TODO work on design
Group.new("Pmenu", c.bg, c.black)
Group.new("PmenuSel", c.black, c.selection)
Group.new("PmenuSbar", nil, c.lightGray)
Group.new("PmenuThumb", nil, c.darkGray)
Group.new("Question", c.primary)
Group.new("QuickFixLine", c.white, c.primary)
Group.new("SpecialKey", c.attribute)
Group.new("StatusLine", nil, c.gray)
Group.new("StatusLineNC", nil, c.lightGray)
Group.new("TabLine", c.darkGray, c.gray)
Group.new("TabLineFill", nil, c.bg)
Group.new("TabLineSel", c.primary, c.lightGray, s.underline)
Group.new("Title", c.primary)
Group.new("Visual", c.constant, c.bg:dark())
Group.new("VisualNOS", g.Visual)
Group.new("WarningMsg", c.warning)
Group.new("WildMenu", nil, c.selection)

Group.new("Variable", c.constant)
Group.link("@variable", g.Variable)
Group.link("@variable.builtin", g.Statement)
Group.new("Constant", c.constant)
Group.link("@constant", g.Constant)
Group.link("@symbol", g.Constant)
Group.new("@constant.builtin", c.keyword)
Group.new("String", c.string, nil, s.italic)
Group.link("@string", g.String)
Group.link("@string.escape", g.Character)
Group.new("Character", g.String)
Group.link("@character", g.Character)
Group.new("Number", c.number)
Group.link("@number", g.Number)
Group.new("Boolean", c.keyword)
Group.link("@boolean", g.Boolean)
-- Group.new("Float", nil)
Group.new("Identifier", c.fg)
Group.link("@identifier", g.Identifier)
Group.new("Function", c.method, nil, s.bold)
Group.link("@function", g.Function)
Group.link("@function.call", g.Function)
Group.link("@function.builtin", g.Function)
Group.link("@method", g.Function)
Group.new("Property", c.property)
Group.link("@property", g.Property)
Group.link("@field", g.Property)
Group.new("Parameter", c.parameter)
Group.link("@parameter", g.Parameter)
Group.new("Statement", c.keyword)
Group.link("@statement", g.Statement)
Group.new("Conditional", c.keyword)
Group.link("@conditional", g.Conditional)
Group.new("Label", c.label)
Group.link("@label", g.Label)
Group.link("@annotation", g.Label)
Group.new("Punctuation", c.punctuation)
Group.link("@punctuation", g.Punctuation)
Group.link("@punctuation.bracket", g.Punctuation)
Group.link("@punctuation.delimeter", g.Punctuation)
Group.link("@punctuation.special", g.Punctuation)
Group.link("@keyword", g.Statement)
Group.link("@keyword.modifier", g.Statement)
Group.link("@operator", g.Statement)
Group.new("PreProc", c.keyword)
Group.link("@preproc", g.PreProc)
Group.new("Type", c.type)
Group.link("@type", g.Type)
-- Group.link("@type.builtin", c.keyword)
Group.new("@type.builtin", c.type)
Group.link("@type.qualifier", g.Statement)
Group.link("@struct", g.Type)
Group.link("@class", g.Type)
Group.link("@constructor", g.Type)
Group.link("@namespace", g.Type)
Group.new("@module", g.Type)
Group.new("Typedef", c.type)
Group.new("Special", g.Character)
Group.new("Attribute", c.attribute)
Group.new("SpecialChar", c.attribute)
Group.new("Tag", g.Tag)
Group.new("Underlined", nil, nil, s.underline)
Group.new("Bold", nil, nil, s.bold)
Group.new("Italic", nil, nil, s.italic)
Group.new("Ignore", c.softPurple, nil, s.none)
Group.new("Error", g.ErrorMsg)
Group.new("Todo", c.softPurple, c.info)
Group.new("WinBar", c.tag, nil, s.bold)
Group.new("WinBarNC", c.fg)
Group.new("@text", g.Identifier)
Group.new("@text.strong", g.Bold)
Group.new("@text.italic", g.Italic)
Group.new("@text.underline", g.Underlined)
Group.new("TextTitle", c.keyword)
Group.new("@text.title", g.TextTitle)
Group.new("TextURI", c.tag, nil, s.underline)
Group.link("@text.uri", g.TextURI)
-- Group.link("@attribute", c.label)
Group.new("Attribute", c.label)
Group.link("@attribute", g.Attribute)
Group.new("Tag", g.Tag)
Group.link("@tag", g.Tag)
Group.new("TextLiteral", g.Property)
Group.link("@text.literal", g.TextLiteral)
Group.new("TagAttribute", c.attribute)
Group.link("@tag.attribute", g.TagAttribute)
Group.new("@info", c.info)
Group.new("@error", g.Error)
Group.new("@warning", g.WarningMsg)

-- Diagnostic
Group.new("DiagnosticError", g.Error)
Group.new("DiagnosticWarn", g.WarningMsg)
Group.new("DiagnosticInfo", c.info)
Group.new("DiagnosticHint", c.hint)

-- Diff
Group.new("gitDiff", c.gray)
Group.new("DiffAdd", c.diffAdd)
Group.new("DiffChange", c.diffChange)
Group.new("DiffDelete", c.diffDelete)
Group.new("DiffText", c.diffText)

-- Treesitter highlight groups update
-- Treesitter standard capture groups
Group.new("@variable.parameter", g.Constant)
Group.new("@variable.member", g.Constant)
Group.new("@module", g.Type)
Group.new("@string.special.symbol", g.Constant)
Group.new("@markup.strong", g.Bold)
Group.new("@markup.underline", g.Underlined)
Group.new("@markup.heading", g.Title)
Group.new("@markup.link.url", g.TextURI)
Group.new("@markup.raw", g.TextLiteral)
Group.new("@markup.list", g.Punctuation)

-- Semantic Highlighting
Group.new("@lsp.type.namespace", g.Type)
Group.new("@lsp.type.type", g.Type)
Group.new("@lsp.type.class", g.Type)
Group.new("@lsp.type.enum", g.Type)
Group.new("@lsp.type.interface", g.Type)
Group.new("@lsp.type.struct", g.Type)
Group.new("@lsp.type.parameter", g.Variable)
Group.new("@lsp.type.variable", g.Variable)
Group.new("@lsp.type.property", c.Constant)
Group.new("@lsp.type.enumMember", g.Constant)
Group.new("@lsp.type.function", g.Function)
Group.new("@lsp.type.method", g.Function)
Group.new("@lsp.type.macro", g.Label)
Group.new("@lsp.type.decorator", g.Label)
Group.new("@lsp.type.builtin", g.Label)
Group.new("@lsp.mod.readonly", g.Constant)
Group.new("@lsp.typemod.function.declaration", g.Function)
Group.new("@lsp.typemod.function.readonly", g.Function)

--svelte
Group.new("@tag.svelte", c.diffAdd)
Group.new("@tag.attribute.svelte", c.error)

